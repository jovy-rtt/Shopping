@model Shopping.Models.Shop

@{
    ViewBag.Title = "编辑店铺";
}

<h2>编辑店铺</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            <label class=" control-label col-md-2">店铺名称</label>

            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class=" control-label col-md-2">店铺头像</label>
            <div class="col-md-10">
                <input type="file" name="shop_pic">

                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <label class=" control-label col-md-2">店铺地址</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <label class=" control-label col-md-2">店铺营业执照</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.LicenseId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LicenseId, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="保存" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@Html.ActionLink("返回", "Index")

<script>
    ClassicEditor
        .create(document.querySelector('#Image'), {
        })
        .then(editor => {
            window.editor = editor;
        })
        .catch(err => {
            console.error(err.stack);
        })

</script>